<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>cat.alkaid.solutions</groupId>
    <artifactId>intrastat</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>intrastat</name>
  
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <version.war.plugin>2.6</version.war.plugin>
        <javaee7.spec.version>1.0.3.Final</javaee7.spec.version>
    </properties>

    <modules>
        <module>intrastat-web</module>
        <module>intrastat-ejb</module>
        <module>intrastat-ear</module>
    </modules>

    <dependencyManagement>
        <dependencies>

        <!-- Define the version of the EJB jar so that we don't need
            to repeat ourselves in every module -->
        <dependency>
            <groupId>cat.alkaid.solutions</groupId>
            <artifactId>intrastat-ejb</artifactId>
            <version>${project.version}</version>
            <type>ejb</type>
        </dependency>

        <!-- Define the version of the WAR so that we don't need to repeat
            ourselves in every module -->
        <dependency>
            <groupId>cat.alkaid.solutions</groupId>
            <artifactId>intrastat-web</artifactId>
            <version>${project.version}</version>
            <type>war</type>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.spec</groupId>
            <artifactId>jboss-javaee-7.0</artifactId>
            <version>${javaee7.spec.version}</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>

            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>5.1.3.Final</version>
                <scope>provided</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.12</version>
                <type>jar</type>
                <scope>test</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>


    <build>
        <pluginManagement>
            <plugins>
                <!-- Compiler plugin enforces Java 1.6 compatibility and activates
                   annotation processors -->
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.3</version>
                    <configuration>
                        <source>1.6</source>
                        <target>1.6</target>
                    </configuration>
                </plugin>
                <!-- The JBoss AS plugin deploys your ear to a local JBoss AS
                   container -->
                <!-- Due to Maven's lack of intelligence with EARs we need to
                   configure the jboss-as maven plugin to skip deployment for all modules. We
                   then enable it specifically in the ear module. -->
                <plugin>
                    <groupId>org.wildfly.plugins</groupId>
                    <artifactId>wildfly-maven-plugin</artifactId>
                    <version>1.0.2.Final</version>
                    <inherited>true</inherited>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
